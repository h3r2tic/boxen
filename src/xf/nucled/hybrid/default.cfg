widget GraphNodeDeleteButton {
	[vexpand] new Graphic {
		size = 13 13;
		style.normal = {
			background = solid(rgba(.1, .1, .1, .7));
			image = file("icons/disconnect.png");
		}

		style.hover = {
			background = solid(rgba(.7, .7, .7, .7));
			deactivation = .3;
		}

		style.active = {
			background = solid(white);
			deactivation = .2;
		}
	}
}


widget GraphNodeBox {
	layout = Layered;
	[hfill vfill] new Graphic {
		renderOversize = 20 20;
		renderOffset = -10 -10;
		
		style.normal = {
			image = grid("themes/default/img/menuShadow.png", hline(14, 66), vline(14, 66));
			background = transparent;
		}
		style.selected = {
			background = solid(rgba(1, 1, 1, .3));
			deactivation = .3;
		}
	}
	
	[hfill vfill] new VBox {
		style.normal = {
			background = solid(rgba(.3, .3, .3, .8));
			border = 1 rgba(0, 0, 0, .3);
		}

		style.data = {
			background = solid(rgba(.1, .1, .1, .8));
		}
		style.gpuWrap = {
			background = solid(rgba(.5, .5, .5, .8));
			border = 1 rgba(.9, .2, .1, .4);
		}
		style.input = {
			background = solid(rgba(.1, .4, .2, .8));
		}
		style.output = {
			background = solid(rgba(.1, .2, .4, .8));
		}
		style.demux = {
			background = solid(rgba(.4, .45, .1, .8));
		}
		style.query = {
			background = solid(rgba(.5, .1, .05, .8));
		}


		//layout = VBox;
		layout = {
			padding = 1 1;
		}
		
		[hexpand hfill] new VBox {
			style.normal = {
				border = 1 rgba(0, 0, 0, .25);
			}
			
			[hexpand hfill] new HBox {
				style.normal = {
					background = solid(rgba(.6, .6, .6, .4));
					border = 1 rgba(0, 0, 0, .2);
				}
				layout = {
					padding = 3 2;
					spacing = 7;
				}
				
				[hexpand hfill] new Label label { text = "Box"; halign = 1; fontSize = 9; }
				
				[vexpand vfill] new GraphNodeDeleteButton deleteButton;
			}

			[hexpand vexpand hfill vfill] new Group contents {
			}
			
			[hexpand hfill] new HBox {
				layout = {
					padding = 0 5;
					spacing = 4;
				}
				
				[hexpand vexpand hfill vfill] new Group inputs {
				}

				[hexpand vexpand hfill vfill] new Group outputs {
				}
			}
			
			[hexpand hfill] new HBox bottom {
				style.normal = {
					background = solid(rgba(0, 0, 0, 0.3));
				}
				layout = {
					attribs = "hexpand hfill";
					spacing = 3;
				}
			}
			
			[hexpand hfill] new VBox bottom2 {
				style.normal = {
					background = solid(rgba(.1, .1, .1, .3));
					//border = 1 rgba(0, 0, 0, .2);
				}
				layout = {
					attribs = "hexpand";
					spacing = 3;
				}
				
				//[hexpand hfill] new Label bottomLabel { text = ""; fontSize = 11; halign = 1; }
			}
		}
	}
	
	//label = sub(label);
	label = prop(label.text);
	//bottomLabel = prop(bottomLabel.text);
	deleteClicked = prop(deleteButton.clicked);
	
	inputs = sub(inputs);
	contents = sub(contents);
	outputs = sub(outputs);
	bottom = sub(bottom);
	bottom2 = sub(bottom2);
}


widget DataConnector {
	[vexpand] new Icon icon {
		addIcon = "icons/dot.png";
		iconIndex = 0;
	}

	icon = sub(icon);
}


widget KernelSelector {
	style.normal = {
		background = solid(rgba(.05, .05, .05, .6));
		border = 2 rgba(0, 0, 0, .8);
	}
	
	layout = VBox;
	layout = {
		padding = 10 10;
		spacing = 20;
	}
	
	[hexpand hfill] new VBox {
		style.normal = {
			background = solid(rgba(.2, .2, .2, .9));
			border = 1 rgba(.4, .4, .4, .5);
		}
		layout = {
			padding = 8 8;
			spacing = 5;
		}
		
		new Label {
			text = "Most recently used";
		}

		[hexpand hfill] new Group {
			layout = {
				padding = 4 4;
			}
			style.normal = {
				background = solid(rgba(.15, .15, .15, .9));
				border = 1 rgba(0, 0, 0, .2);
			}

			[hexpand hfill] new HBox mru {
				layout = {
					spacing = 10;
					attribs = "hexpand";
				}
				
				/+new KernelBox {
					new Label { text = "cpu"; fontSize = 9; }
					new Label { text = "krnl: Foobar"; fontSize = 9; }
					new Label { text = "func: main"; fontSize = 9; }
					[hexpand hfill vexpand vfill] new Label { text = "1"; fontSize = 9; halign = 2; valign = 2; }
				}+/
			}
		}
	}
	
	[hexpand hfill vexpand vfill] new VBox contents {
		style.normal = {
			background = solid(rgba(.7, .7, .7, .2));
		}
	}
	
	children = sub(contents);
	mru = sub(mru);
}


widget KernelBox {
	[hexpand hfill vexpand vfill]new Button button {
		text = "";
	} @leftExtra {
		[hexpand hfill vexpand vfill] new VBox stuff {
			size = 70 50;
		}
	}
	
	children = sub(button.stuff);
	clicked = prop(button.clicked);
}


widget KernelBoxContainer {
	layout = {
		padding = 4 4;
	}
	style.normal = {
		background = solid(rgba(.15, .15, .15, .9));
		border = 1 rgba(0, 0, 0, .2);
	}

	[hexpand hfill vexpand vfill] new ScrollView {
		useChildSize = 1;

		[hexpand hfill vexpand vfill] new Group stuff {
			layout = VFlow;
			layout = {
				spacing = 10;
			}
		}
	}
	
	children = sub(stuff);
}



widget FloatingWindow {
	layout = Layered;
	[hfill vfill] new Graphic {
		renderOversize = 8 8;
		renderOffset = 2 2;
		style.normal = {
			background = solid(rgba(0, 0, 0, .5));
			image = grid("themes/default/img/menuShadow.png", hline(14, 66), vline(14, 66));
		}
	}
	
	[hfill vfill] new WindowFrame windowFrame {
		style.normal = {
			background = solid(rgb(.22, .22, .22));
		}
		[hexpand hfill vexpand vfill] new VBox box;				
	}
	
	
	children = sub(windowFrame.box);
	minimizeClicked = prop(windowFrame.minimizeClicked);
	maximizeClicked = prop(windowFrame.maximizeClicked);
	closeClicked = prop(windowFrame.closeClicked);
	text = prop(windowFrame.text);
}



widget ConnectionBreaker {
	[vexpand vfill hexpand hfill] new Graphic {
		size = 10 10;
		style.normal = {
			background = solid(rgba(1, .3, .3, .7));
			image = file("icons/disconnect.png");
		}

		style.hover = {
			background = solid(rgba(1, .5, .5, 1));
			deactivation = .3;
		}

		style.active = {
			background = solid(white);
			deactivation = .2;
		}
	}
}



widget MaterialBrowserWindow {
	style.normal = {
		background = solid(rgba(.05, .05, .05, .6));
		border = 2 rgba(0, 0, 0, .8);
	}
	
	[hexpand hfill vexpand vfill] new ScrollView {
		useChildSize = 1;

		[hexpand hfill vexpand vfill] new Group contents {
			layout = VFlow;
			layout = {
				spacing = 10;
				padding = 10 10;
			}
		}
	}
	
	children = sub(contents);
}


widget MaterialMiniatureBox {
	[hexpand hfill vexpand vfill] new VBox contents {
		layout = {
			padding = 5 5;
		}
		style.normal = {
			border = 2 rgba(1, 1, 1, .05);
			background = solid(rgba(1, 1, 1, 0.02));
		}
		style.hover = {
			background = solid(rgba(1, 1, 1, 0.05));
			deactivation = .3;
		}
	}

	children = sub(contents);
}
