struct vertInput {
	float3 position : POSITION;
};

struct fragInput {
	float3 position : TEXCOORD0;
	float2 texCoord : TEXCOORD1;
};


float3x4 modelToWorld;
float4x4 worldToView <
	string scope = "effect";
>;
float4x4 viewToClip <
	string scope = "effect";
>;

float3 terrainScale;


void VertexProgram(
	in vertInput input,
	out float4 outPos : POSITION,
	out fragInput output
) {
	output.texCoord = input.position.xz;
	input.position *= terrainScale;
	float3 worldPos = mul(modelToWorld, float4(input.position, 1));
	outPos = mul(viewToClip, mul(worldToView, float4(worldPos, 1.0)));
	output.position = worldPos;
}


void FragmentProgram(
	in fragInput input,
	uniform sampler2D albedoTex,
	uniform sampler2D detailTex,
	uniform sampler2D lightTex,
	out float4 output : COLOR
) {
	float2 tc = float2(input.texCoord.x, 1.0f - input.texCoord.y);
	output = tex2D(albedoTex, tc);
	output *= saturate(tex2D(detailTex, tc * 10.f) + 0.3f);
	output += (tex2D(detailTex, tc * 33.3f) - 0.5f) * 0.7f;
	output *= tex2D(lightTex, tc);
	output *= 6.0f;
	//output = float4(1, 1, 1, 1) * (input.position.y - 0.5f) / 3;
}
