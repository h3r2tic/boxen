//TestSurface1 = surface Lambert {};

/+TestSurface1 = surface CookTorrance {
	fresnelR0 = 0.15;
	roughness = 0.3;
};+/

/+TestSurface1 = surface ABg {
	BRDF_A = 0.1;
	BRDF_B = 0.001;
	BRDF_g = 1.3;
};+/

TestSurface1 = surface ABC_approx2 {
	BRDF_A = 1;
	BRDF_B = 60.0;
	BRDF_C = 0.92;
};

ParticleSurface = surface Uniform {};

/+TestSurface1 = surface HenyeyGreenstein {
	roughness = 0.5;
};+/

/+TestSurface1 = surface ABC {
	BRDF_A = 1;
	BRDF_B = 7000.0;
	BRDF_C = 0.7;
};+/

TestSurface4 = surface HalfLambert {
};

TestSurface2 = surface ABg_h {
	BRDF_A = 0.0025;
	BRDF_B = 0.0001;
	BRDF_g = 1.8;
};

TestSurface3 = surface ABg_h {
	BRDF_A = 0.06;
	BRDF_B = 0.001;
	BRDF_g = 1.3;
};

/+TestSurface3 = surface ABC {
	BRDF_A = 1;
	BRDF_B = 33333;
	BRDF_C = 0.37;
};+/

/+TestSurface1 = surface ABg_h {
	BRDF_A = 0.0025;
	BRDF_B = 0.0001;
	BRDF_g = 1.8;
};

TestSurface4 = surface ABg_h {
	BRDF_A = 0.06;
	BRDF_B = 0.001;
	BRDF_g = 1.3;
};+/


/+
TestParticleMaterial = graph Material {
	n0 = node {
		type = input;
	};
	n1 = node {
		type = data;
		params = (
			albedoTint <type float4 + use color> = 1 1 1 1,
			albedoTex <type sampler2D + use color>,
		);
	};
	ns = node {
		type = kernel;
		kernel = Tex2D;		
	};
	nm = node {
		type = kernel;
		kernel = Mul;
	};
	n2 = node {
		type = kernel;
		kernel = kernel Material(
			albedoImg <type Image>
		) {
			float2 oc = texCoord.xy - 0.5f;
			if (dot(oc, oc) > 0.249f) discard;
			out_albedo = 1;
			out_specular = 0;
			oc *= 2;
			out_normal = tangent * oc.x + bitangent * oc.y + normal * sqrt(1.0 - dot(oc, oc));
		};
	};
	n3 = node {
		type = output;
	};

	// ----

	connect n1 ns;
	connect ns.sample nm.a;
	connect n1.albedoTint nm.b;
	connect nm.c n2.albedoImg;
	noauto ns.uv;

	connect n0 n2;
	connect n2.out_albedo n3.out_albedo;
	connect n2.out_specular n3.out_specular;
	connect n2.out_emissive n3.out_emissive;
	connect n2 n3;
};
+/
