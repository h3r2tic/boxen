struct vertInput {
	float3 position : POSITION;
	float3 normal : TEXCOORD0;
};

struct fragInput {
	float3 normal : TEXCOORD0;
	float3 position : TEXCOORD1;
};


float3x4 modelToWorld;
float3 modelScale;

float4x4 worldToView <
	string scope = "effect";
>;
float4x4 viewToClip <
	string scope = "effect";
>;


void VertexProgram(
	in vertInput input,
	out float4 outPos : POSITION,
	out fragInput output
) {
	input.position *= modelScale;
	float3 worldPos = mul(modelToWorld, float4(input.position, 1));
	output.normal = mul(modelToWorld, float4(input.normal, 0));
	outPos = mul(viewToClip, mul(worldToView, float4(worldPos, 1.0)));
	output.position = worldPos;
}


void FragmentProgram(
	in fragInput input,
	uniform float4 tintColor,
	out float4 output : COLOR
) {
	output = tintColor * ((input.normal + 1.0f) * 0.5f).xyzz;
}

